<?php

/**
 * @file
 * Commerce Attributes module.
 */

/**
 * Implements hook_entity_type_build().
 */
function commerce_attributes_entity_type_alter(&$entity_types) {
  $entity_types['commerce_product_attribute']->setClass('Drupal\commerce_attributes\Entity\ProductAttribute');
  $entity_types['commerce_product_attribute_value']->setClass('Drupal\commerce_attributes\Entity\ProductAttributeValue');
  $entity_types['commerce_product_attribute']->setFormClass('add', 'Drupal\commerce_attributes\Form\ProductAttributeForm');
  $entity_types['commerce_product_attribute']->setFormClass('edit', 'Drupal\commerce_attributes\Form\ProductAttributeForm');
  $entity_types['commerce_product_attribute_value']->setFormClass('add', 'Drupal\commerce_attributes\Form\ProductAttributeValueForm');
  $entity_types['commerce_product_attribute_value']->setFormClass('edit', 'Drupal\commerce_attributes\Form\ProductAttributeValueForm');
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function commerce_attributes_commerce_product_attribute_value_update($entity) {
  // Updates the variation price associated with the attribute value.
  $attributePrice = $entity->get('price')->getValue();
  if (!empty($attributePrice)) {
    $priceHandler = \Drupal::service('commerce_attributes.variation_price_handler');
    $priceHandler->updateProductVariationsPrice($entity);
  }
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function commerce_attributes_commerce_product_variation_presave($entity) {
  // Updates the variation price to be the sum of its attributes which have has
  // price trait enabled.
  $priceHandler = \Drupal::service('commerce_attributes.variation_price_handler');
  $newPrice = $priceHandler->getProductVariationPrice($entity);
  $entity->setPrice($newPrice);
}
